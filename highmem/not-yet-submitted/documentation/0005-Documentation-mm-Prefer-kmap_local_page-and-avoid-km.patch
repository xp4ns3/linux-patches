From 8b3ea527720a788d66efd0063f62a76cb1f2fa7d Mon Sep 17 00:00:00 2001
From: "Fabio M. De Francesco" <fmdefrancesco@gmail.com>
Date: Wed, 13 Jul 2022 19:06:41 +0200
Subject: [PATCH 5/6] Documentation/mm: Prefer kmap_local_page() and avoid
 kmap()

Two main problems with kmap(): (1) It comes with an overhead as mapping
space is restricted and protected by a global lock for synchronization and
(2) kmap() also requires global TLB invalidation when its pool wraps and
it might block when the mapping space is fully utilized until a slot
becomes available.

Warn users to avoid the use of kmap() by designing their code to map
pages in the same context where the pointer returned by
kmap_local_page() is going to be used.

The following message can help to understand better:
https://lore.kernel.org/lkml/1891319.taCxCBeP46@opensuse/

Cc: Andrew Morton <akpm@linux-foundation.org>
Cc: Matthew Wilcox (Oracle) <willy@infradead.org>
Cc: Mike Rapoport <rppt@linux.ibm.com>
Cc: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Cc: Thomas Gleixner <tglx@linutronix.de>
Suggested-by: Ira Weiny <ira.weiny@intel.com>
Signed-off-by: Fabio M. De Francesco <fmdefrancesco@gmail.com>
---
 Documentation/vm/highmem.rst | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/Documentation/vm/highmem.rst b/Documentation/vm/highmem.rst
index b72689d47265..f43951e07890 100644
--- a/Documentation/vm/highmem.rst
+++ b/Documentation/vm/highmem.rst
@@ -83,6 +83,11 @@ list shows them in order of preference of use.
   and cannot be handed to other contexts. This implies that users must
   be absolutely sure not to break the rule of thread locality.
 
+  Even though it cannot be probably proved that every piece of code can be
+  thought to make use of thread local mappings, users should try to design
+  in ways that permit to avoid the use of kmap() by mapping pages in the
+  same context where the address will be used.
+
   Nesting kmap_local_page() and kmap_atomic() mappings is allowed to a certain
   extent (up to KMAP_TYPE_NR) but their invocations have to be strictly ordered
   because the map implementation is stack based. See kmap_local_page() kdocs
-- 
2.37.0

