From 499d37b441cd0adb6e8b2bbc0579ca84a740dd01 Mon Sep 17 00:00:00 2001
From: "Fabio M. De Francesco" <fmdefrancesco@gmail.com>
Date: Sat, 16 Jul 2022 02:12:38 +0200
Subject: [PATCH] fs/isofs: Replace kmap() with kmap_local_page()
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

The use of kmap() is being deprecated in favor of kmap_local_page().

Two main problems with kmap(): (1) It comes with an overhead as mapping
space is restricted and protected by a global lock for synchronization and
(2) it also requires global TLB invalidation when the kmapâ€™s pool wraps
and it might block when the mapping space is fully utilized until a slot
becomes available.

kmap_local_page() is preferred over kmap() and kmap_atomic(). Where it
cannot mechanically replace the latters, code refactor should be
considered.

Therefore, replace kmap() with kmap_local_page() in compress.c and use
memzero_page() instead of open coding kmap_local_page() + memset() to fill
the pages with zeros.

Suggested-by: Ira Weiny <ira.weiny@intel.com>
Signed-off-by: Fabio M. De Francesco <fmdefrancesco@gmail.com>
---
 fs/isofs/compress.c | 10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

diff --git a/fs/isofs/compress.c b/fs/isofs/compress.c
index fe3eca7de2f4..94d0ef6c2fc4 100644
--- a/fs/isofs/compress.c
+++ b/fs/isofs/compress.c
@@ -169,6 +169,12 @@ static loff_t zisofs_uncompress_block(struct inode *inode, loff_t block_start,
 			}
 		}
 
+		if (stream.next_out) {
+			if (stream.next_out != zisofs_sink_page) {
+				kunmap_local(stream.next_out);
+				stream.next_out = NULL;
+			}
+
 		if (!stream.avail_out) {
 			/* This page completed */
 			if (pages[curpage]) {
@@ -182,7 +188,9 @@ static loff_t zisofs_uncompress_block(struct inode *inode, loff_t block_start,
 	}
 inflate_out:
 	zlib_inflateEnd(&stream);
-	kunmap_local(stream.next_out);
+	if (stream.next_out)
+		if (stream.next_out != zisofs_sink_page)
+			kunmap_local(stream.next_out);
 
 z_eio:
 	mutex_unlock(&zisofs_zlib_lock);
-- 
2.37.1

