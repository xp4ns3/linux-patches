From 7af968879224ba7a5c6a0b707754e66e011b62b5 Mon Sep 17 00:00:00 2001
From: "Fabio M. De Francesco" <fmdefrancesco@gmail.com>
Date: Fri, 30 Jul 2021 14:40:47 +0200
Subject: [PATCH] admin-guide/hw-vuln: Add information to the "Usage" section
 of core-scheduling.rst

Add information to the "Usage" section of core-scheduling.rst on how
to enable core scheduling via writing to the file "cpu.core_tag" that
is under the control groups interface in /sys/fs/cgroup/. This
method is easier to be used by administrators who cannot program in C
because all that is required is that they can use a shell.

Suggested-by: Vineeth Pillai <Vineeth.Pillai@microsoft.com>
Signed-off-by: Fabio M. De Francesco <fmdefrancesco@gmail.com>
---
 .../admin-guide/hw-vuln/core-scheduling.rst          | 12 ++++++++++++
 1 file changed, 12 insertions(+)

diff --git a/Documentation/admin-guide/hw-vuln/core-scheduling.rst b/Documentation/admin-guide/hw-vuln/core-scheduling.rst
index e6b5ceb219ec..4c68ddeb216c 100644
--- a/Documentation/admin-guide/hw-vuln/core-scheduling.rst
+++ b/Documentation/admin-guide/hw-vuln/core-scheduling.rst
@@ -31,6 +31,8 @@ total number of CPUs. Please measure the performance of your workloads always.
 
 Usage
 -----
+1. The prctl(2) interface
+~~~~~~~~~~~~~~~~~~~~~~~~~
 Core scheduling support is enabled via the ``CONFIG_SCHED_CORE`` config option.
 Using this feature, userspace defines groups of tasks that can be co-scheduled
 on the same core. The core scheduler uses this information to make sure that
@@ -73,6 +75,16 @@ In order for a process to push a cookie to, or pull a cookie from a process, it
 is required to have the ptrace access mode: `PTRACE_MODE_READ_REALCREDS` to the
 process.
 
+2. The /sys interface
+~~~~~~~~~~~~~~~~~~~~~
+If Control groups (cgroups) feature is enabled, Core scheduling adds the file 
+``cpu.core_tag`` to the Controller groups under /sys/fs/cgroup/. If a system 
+administrator writes ``1`` to this file in a cgroup subdirectory (e.g., doing an 
+``echo 1 > ./cpu.core_tag``), all the tasks that belongs to the cgroup get tagged 
+with a unique cookie; therefore, they are allowed to run concurrently on any of 
+the siblings of a core. All descendants are automatically tagged and the tag cannot
+be cleared in them.
+
 Building hierarchies of tasks
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 The simplest way to build hierarchies of threads/processes which share a
-- 
2.32.0

